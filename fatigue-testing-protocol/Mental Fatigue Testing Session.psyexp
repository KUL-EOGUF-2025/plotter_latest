<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.4">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'age (years)': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="False" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="True" valType="bool"/>
    <Param name="Units" updates="None" val="norm" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1536, 864]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="Mental Fatigue Testing Session" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="timer">
      <CodeComponent name="timer_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="probeVal = []" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="probeVal = [];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if loopTimer.getTime() &gt; 600:&amp;#10;    currentLoop.finished = True" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((loopTimer.getTime() &gt; 600)) {&amp;#10;    currentLoop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="timer_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="timer_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="timer_text" valType="code"/>
        <Param name="opacity" updates="constant" val="0" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="x" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="AXCPTtrial">
      <CodeComponent name="AXCPTtrial_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="Bletters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;Yletters = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;Z&quot;];&amp;#10;distractors = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="Bletters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;Yletters = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;Z&quot;];&amp;#10;distractors = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}&amp;#10;&amp;#10;distractor1Val = choice(distractors);&amp;#10;distractor2Val = choice(distractors);&amp;#10;if ((trialType === &quot;target&quot;)) {&amp;#10;    cueVal = &quot;A&quot;;&amp;#10;    probeVal = &quot;X&quot;;&amp;#10;} else {&amp;#10;    if ((trialType === &quot;probeWrong&quot;)) {&amp;#10;        cueVal = &quot;A&quot;;&amp;#10;        probeVal = choice(Yletters);&amp;#10;    } else {&amp;#10;        if ((trialType === &quot;cueWrong&quot;)) {&amp;#10;            cueVal = choice(Bletters);&amp;#10;            probeVal = &quot;X&quot;;&amp;#10;        } else {&amp;#10;            if ((trialType === &quot;bothWrong&quot;)) {&amp;#10;                cueVal = choice(Bletters);&amp;#10;                probeVal = choice(Yletters);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="#function choice(arr) {&amp;#10;#  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;#}&amp;#10;&amp;#10;distractor1Val = choice(distractors)&amp;#10;distractor2Val = choice(distractors)&amp;#10;&amp;#10;&amp;#10;&amp;#10;if trialType == 'target':&amp;#10;    cueVal = 'A'&amp;#10;    probeVal = 'X'&amp;#10;&amp;#10;elif trialType == 'probeWrong':&amp;#10;    cueVal = 'A'&amp;#10;    probeVal = choice(Yletters)&amp;#10;&amp;#10;elif trialType == 'cueWrong':&amp;#10;    cueVal = choice(Bletters)&amp;#10;    probeVal = 'X'&amp;#10;&amp;#10;elif trialType == 'bothWrong':&amp;#10;    cueVal = choice(Bletters)&amp;#10;    probeVal = choice(Yletters)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="AXCPTtrial_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="cue_text">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="0.3" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="cue_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.3" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$cueVal" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="break1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="break1" valType="code"/>
        <Param name="opacity" updates="constant" val="0" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="x" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="distractor1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="distractor1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.5" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$distractor1Val" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="break2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="break2" valType="code"/>
        <Param name="opacity" updates="constant" val="0" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.8" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="x" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="distractor2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="distractor2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3.3" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$distractor2Val" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="break3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="break3" valType="code"/>
        <Param name="opacity" updates="constant" val="0" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3.3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="x" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="AXCPTprobe">
      <TextComponent name="probe_text">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="probe_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.3" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$probeVal" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="AXCPT_resp">
        <Param name="allowedKeys" updates="constant" val="'k', 'd'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corrResponse" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="AXCPT_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="AXCPTfeedback">
      <CodeComponent name="AXCPTfeedback_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg = ' '" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg = &quot; &quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if (AXCPT_resp.corr) {&amp;#10;    msg = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if AXCPT_resp.corr:&amp;#10;    msg = &quot;Correct&quot;&amp;#10;else:&amp;#10;    msg = &quot;Incorrect&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="AXCPTfeedback_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="AXCPTfeedback_text">
        <Param name="color" updates="constant" val="$[1.000,1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="AXCPTfeedback_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="NBackFirst3Trials">
      <CodeComponent name="NBackFirst3Trials_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="Back2minus1=[]&amp;#10;Back2minus2=[]&amp;#10;Back2minus3=[]" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="Back2minus1 = [];&amp;#10;Back2minus2 = [];&amp;#10;Back2minus3 = [];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}&amp;#10;&amp;#10;letters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;nletter = choice(letters);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="letters = ['B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Z']&amp;#10;nletter=choice(letters)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="Back2minus3 = Back2minus2;&amp;#10;Back2minus2 = Back2minus1;&amp;#10;Back2minus1 = nletter;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="Back2minus3=Back2minus2&amp;#10;Back2minus2=Back2minus1&amp;#10;Back2minus1=nletter" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="NBackFirst3Trials_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="NBackText_1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="NBackText_1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$nletter" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="NBack_resp_1">
        <Param name="allowedKeys" updates="constant" val="'k', 'd'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corrResponse" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="NBack_resp_1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="NBackRemainderTrials">
      <CodeComponent name="NBackTrials_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}&amp;#10;&amp;#10;if ((trialType === &quot;nonTarget&quot;)) {&amp;#10;    letters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;    nletter = choice(letters);&amp;#10;    if ((nletter === Back2minus1)) {&amp;#10;        nletter = choice(letters);&amp;#10;    }&amp;#10;    if ((nletter === Back2minus2)) {&amp;#10;        nletter = choice(letters);&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((trialType === &quot;target&quot;)) {&amp;#10;        nletter = Back2minus3;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if trialType=='nonTarget':&amp;#10;    letters = ['B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Z']&amp;#10;    nletter=choice(letters)&amp;#10;    if nletter==Back2minus1:&amp;#10;            nletter=choice(letters)&amp;#10;    if nletter==Back2minus2:&amp;#10;            nletter=choice(letters)&amp;#10;elif trialType=='target':&amp;#10;    nletter=Back2minus3" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="Back2minus3 = Back2minus2;&amp;#10;Back2minus2 = Back2minus1;&amp;#10;Back2minus1 = nletter;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="Back2minus3=Back2minus2&amp;#10;Back2minus2=Back2minus1&amp;#10;Back2minus1=nletter" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="NBackTrials_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="NBackText_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="NBackText_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$nletter" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="NBack_resp_2">
        <Param name="allowedKeys" updates="constant" val="'k', 'd'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corrResponse" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="NBack_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="mentRotTrial">
      <ImageComponent name="mentRotStimulus">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$imagefile" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="mentRotStimulus" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.935, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="7.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="MROT_resp">
        <Param name="allowedKeys" updates="constant" val="'k', 'd'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corrResponse" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MROT_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="7.5" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="mentRotFeedback">
      <CodeComponent name="NBackfeedback_code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg = ' '" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg = &quot; &quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if (MROT_resp.corr) {&amp;#10;    msg = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if MROT_resp.corr:&amp;#10;    msg = &quot;Correct&quot;&amp;#10;else:&amp;#10;    msg = &quot;Incorrect&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="NBackfeedback_code_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="NBackfeedback_text_2">
        <Param name="color" updates="constant" val="$[1.000,1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="NBackfeedback_text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="NBackFeedback">
      <CodeComponent name="NBackfeedback_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg = ' '" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg = &quot; &quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if (NBack_resp_2.corr) {&amp;#10;    msg = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if NBack_resp_2.corr:&amp;#10;    msg = &quot;Correct&quot;&amp;#10;else:&amp;#10;    msg = &quot;Incorrect&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="NBackfeedback_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="AXCPTfeedback_text_2">
        <Param name="color" updates="constant" val="$[1.000,1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="AXCPTfeedback_text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="intro">
      <CodeComponent name="maths_js_fix_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="// Code to fix reference errors in JS&amp;#10;  thisExp = psychoJS.experiment;&amp;#10;  win = psychoJS.window;&amp;#10;  event = psychoJS.eventManager;&amp;#10;  Array.prototype.append = [].push;&amp;#10;  shuffle = util.shuffle;&amp;#10;  document.documentElement.style.cursor = 'none';&amp;#10;  &amp;#10;  // Math related fixes&amp;#10;  //pi = Math.PI;&amp;#10;  //sin = Math.sin;&amp;#10;  //cos = Math.cos;&amp;#10;  //sqrt = Math.sqrt;&amp;#10;  randint = function(min, maxplusone) {&amp;#10;    return Math.floor(Math.random() * (maxplusone - min) ) + min;&amp;#10;  }&amp;#10;  shuffle = util.shuffle;&amp;#10;  elapsedTime = new util.Clock();&amp;#10;  &amp;#10;//  function choice(arr) {&amp;#10;//    return arr[Math.floor(Math.random() * arr.length)];&amp;#10;//  }" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="maths_js_fix_code" valType="code"/>
      </CodeComponent>
      <CodeComponent name="elapsed_time">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="elapsedTime = util.Clock()" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="elapsedTime = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="elapsed_time" valType="code"/>
      </CodeComponent>
      <CodeComponent name="centerAlignMaster">
        <Param name="Before Experiment" updates="constant" val="document.body.style.cursor='auto';" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="document.body.style.cursor = &quot;auto&quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="BRUMSheader.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_2.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_3.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_5.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_9.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_7.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_11.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_13.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_10.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_12.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_14.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_8.setAlignHoriz(&quot;center&quot;);&amp;#10;text_2.setAlignHoriz(&quot;center&quot;);&amp;#10;text_8.setAlignHoriz(&quot;center&quot;);&amp;#10;text_9.setAlignHoriz(&quot;center&quot;);&amp;#10;text_10.setAlignHoriz(&quot;center&quot;);&amp;#10;text_11.setAlignHoriz(&quot;center&quot;);&amp;#10;text_3.setAlignHoriz(&quot;center&quot;);&amp;#10;text_5.setAlignHoriz(&quot;center&quot;);&amp;#10;text_19.setAlignHoriz(&quot;center&quot;);&amp;#10;text_13.setAlignHoriz(&quot;center&quot;);&amp;#10;text_7.setAlignHoriz(&quot;center&quot;);&amp;#10;text_15.setAlignHoriz(&quot;center&quot;);&amp;#10;text_17.setAlignHoriz(&quot;center&quot;);&amp;#10;text_14.setAlignHoriz(&quot;center&quot;);&amp;#10;text_16.setAlignHoriz(&quot;center&quot;);&amp;#10;text_18.setAlignHoriz(&quot;center&quot;);&amp;#10;text_12.setAlignHoriz(&quot;center&quot;);&amp;#10;text_20.setAlignHoriz(&quot;center&quot;);&amp;#10;BRUMSheader_2.setAlignHoriz(&quot;center&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="BRUMSheader.setAlignHoriz('center')&amp;#10;&amp;#10;instrHeaderText_2.setAlignHoriz('center')&amp;#10;instrHeaderText_3.setAlignHoriz('center')&amp;#10;instrHeaderText_5.setAlignHoriz('center')&amp;#10;instrHeaderText_9.setAlignHoriz('center')&amp;#10;instrHeaderText_7.setAlignHoriz('center')&amp;#10;instrHeaderText_11.setAlignHoriz('center')&amp;#10;instrHeaderText_13.setAlignHoriz('center')&amp;#10;instrHeaderText_10.setAlignHoriz('center')&amp;#10;instrHeaderText_12.setAlignHoriz('center')&amp;#10;instrHeaderText_14.setAlignHoriz('center')&amp;#10;instrHeaderText_8.setAlignHoriz('center')&amp;#10;&amp;#10;text_2.setAlignHoriz('center')&amp;#10;text_8.setAlignHoriz('center')&amp;#10;text_9.setAlignHoriz('center')&amp;#10;text_10.setAlignHoriz('center')&amp;#10;text_11.setAlignHoriz('center')&amp;#10;text_3.setAlignHoriz('center')&amp;#10;text_5.setAlignHoriz('center')&amp;#10;text_19.setAlignHoriz('center')&amp;#10;text_13.setAlignHoriz('center')&amp;#10;text_7.setAlignHoriz('center')&amp;#10;text_15.setAlignHoriz('center')&amp;#10;text_17.setAlignHoriz('center')&amp;#10;text_14.setAlignHoriz('center')&amp;#10;text_16.setAlignHoriz('center')&amp;#10;text_18.setAlignHoriz('center')&amp;#10;text_12.setAlignHoriz('center')&amp;#10;text_20.setAlignHoriz('center')&amp;#10;&amp;#10;BRUMSheader_2.setAlignHoriz('center')" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="centerAlignMaster" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="&quot;right&quot;" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="2" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText" valType="code"/>
        <Param name="opacity" updates="constant" val="0" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Introduction" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Welcome to the testing session&amp;#10;&amp;#10;Before you begin, please make sure that you are sitting comfortably in a quiet environment where you will not be interrupted. Please also ensure that your computer is connected to a power source and will not enter sleep mode&amp;#10;&amp;#10;In this session you will spend 2-3 hours repeating the tasks that you learned in the training session. There will be multiple chances for you to take rest breaks if you need to&amp;#10;&amp;#10;If you decide that you do not want to continue you can press the escape key at any time to quit the experiment. If you quit, your data will not be saved&amp;#10;&amp;#10;Before the tasks begin, you will complete some ratings. Please press the right arrow on your keyboard to continue" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrNBACKbreak2">
      <CodeComponent name="instrNBACK_timer">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrNBACKbreak2Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrNBACKbreak2Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break2.duration&quot;, instrNBACKbreak2Timer.getTime());&amp;#10;instrNBACKbreak2Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break2.duration', instrNBACKbreak2Timer.getTime())&amp;#10;instrNBACKbreak2Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: N-Back&amp;#10;&amp;#10;Decide whether the letter on the screen is the same as the one 3 letters ago&amp;#10;&amp;#10;Press 'k' if it is the same&amp;#10;&amp;#10;Press 'd' if it is not the same&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrAXCPTbreak1">
      <CodeComponent name="instrAXCPT_timer">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrAXCPTbreak1Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrAXCPTbreak1Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break1.duration&quot;, instrAXCPTbreak1Timer.getTime());&amp;#10;instrAXCPTbreak1Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break1.duration', instrAXCPTbreak1Timer.getTime())&amp;#10;instrAXCPTbreak1Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrAXCPT_timer" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Next task: AX-CPT&amp;#10;&amp;#10;Press 'k' when first red letter is 'A' and second red letter is 'X'&amp;#10;&amp;#10;Press 'd' for any other combination of letters&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="BRUMS_1">
      <CodeComponent name="force_end_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="BRUMSTimer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="BRUMSTimer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if slider1.getRating() &gt; 0 and slider2.getRating() &gt; 0 and slider3.getRating() &gt; 0 and slider4.getRating() &gt; 0 and slider5.getRating() &gt; 0 and slider6.getRating() &gt; 0 and slider7.getRating() &gt; 0 and slider8.getRating() &gt; 0:&amp;#10;    continueRoutine = false" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (((((((((slider1.getRating() &gt; 0) &amp;&amp; (slider2.getRating() &gt; 0)) &amp;&amp; (slider3.getRating() &gt; 0)) &amp;&amp; (slider4.getRating() &gt; 0)) &amp;&amp; (slider5.getRating() &gt; 0)) &amp;&amp; (slider6.getRating() &gt; 0)) &amp;&amp; (slider7.getRating() &gt; 0)) &amp;&amp; (slider8.getRating() &gt; 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="force_end_code" valType="code"/>
      </CodeComponent>
      <MouseComponent name="mouse_3">
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="never" valType="str"/>
        <Param name="name" updates="None" val="mouse_3" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (frames)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <PolygonComponent name="mouse_visibility_fix">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="180" valType="int"/>
        <Param name="name" updates="None" val="mouse_visibility_fix" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every frame" val="(mouse_3.getPos()[0], mouse_3.getPos()[1])" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="constant" val="(0.025, 0.025)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <SliderComponent name="slider1">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider2">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider3">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider4">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider5">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider6">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider7">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider8">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="text_9">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.82)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Rating Scales: Page 1 of 3&amp;#10;&amp;#10;Describe how you feel right now&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="panicky">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="panicky" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Panicky" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="lively">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="lively" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Lively" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="confused">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="confused" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Confused" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="wornout">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="wornout" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Worn Out" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="depressed">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="depressed" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Depressed" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="downheartened">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="downheartened" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Downheartened" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="annoyed">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="annoyed" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Annoyed" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="exhausted">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="exhausted" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Exhausted" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="BRUMS_2">
      <CodeComponent name="force_end_code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if slider9.getRating() &gt; 0 and slider10.getRating() &gt; 0 and slider11.getRating() &gt; 0 and slider12.getRating() &gt; 0 and slider13.getRating() &gt; 0 and slider14.getRating() &gt; 0 and slider15.getRating() &gt; 0 and slider16.getRating() &gt; 0:&amp;#10;    continueRoutine = false" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (((((((((slider9.getRating() &gt; 0) &amp;&amp; (slider10.getRating() &gt; 0)) &amp;&amp; (slider11.getRating() &gt; 0)) &amp;&amp; (slider12.getRating() &gt; 0)) &amp;&amp; (slider13.getRating() &gt; 0)) &amp;&amp; (slider14.getRating() &gt; 0)) &amp;&amp; (slider15.getRating() &gt; 0)) &amp;&amp; (slider16.getRating() &gt; 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="force_end_code_2" valType="code"/>
      </CodeComponent>
      <MouseComponent name="mouse_5">
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="never" valType="str"/>
        <Param name="name" updates="None" val="mouse_5" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <PolygonComponent name="mouse_visibility_fix_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="180" valType="int"/>
        <Param name="name" updates="None" val="mouse_visibility_fix_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every frame" val="(mouse_5.getPos()[0], mouse_5.getPos()[1])" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="constant" val="(0.025, 0.025)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <SliderComponent name="slider9">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider10">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider10" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider11">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider11" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider12">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider12" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider13">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider13" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider14">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider14" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider15">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider15" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider16">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider16" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="text_10">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_10" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.82)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Rating Scales: Page 2 of 3&amp;#10;&amp;#10;Describe how you feel right now&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="mixedup">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="mixedup" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Mixed-up" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="sleepy">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="sleepy" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Sleepy" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="bitter">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="bitter" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Bitter" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="unhappy">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="unhappy" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Unhappy" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="anxious">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="anxious" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Anxious" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="worried">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="worried" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Worried" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="energetic">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="energetic" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Energetic" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="miserable">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="miserable" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Miserable" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="BRUMS_3">
      <CodeComponent name="force_end_code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if slider17.getRating() &gt; 0 and slider18.getRating() &gt; 0 and slider19.getRating() &gt; 0 and slider20.getRating() &gt; 0 and slider21.getRating() &gt; 0 and slider22.getRating() &gt; 0 and slider23.getRating() &gt; 0 and slider24.getRating() &gt; 0:&amp;#10;    continueRoutine = false" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (((((((((slider17.getRating() &gt; 0) &amp;&amp; (slider18.getRating() &gt; 0)) &amp;&amp; (slider19.getRating() &gt; 0)) &amp;&amp; (slider20.getRating() &gt; 0)) &amp;&amp; (slider21.getRating() &gt; 0)) &amp;&amp; (slider22.getRating() &gt; 0)) &amp;&amp; (slider23.getRating() &gt; 0)) &amp;&amp; (slider24.getRating() &gt; 0))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="force_end_code_3" valType="code"/>
      </CodeComponent>
      <CodeComponent name="BRUMS2_timer_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;BRUMS.duration&quot;, BRUMSTimer.getTime());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('BRUMS.duration', BRUMSTimer.getTime())" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="BRUMS2_timer_2" valType="code"/>
      </CodeComponent>
      <MouseComponent name="mouse_6">
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="never" valType="str"/>
        <Param name="name" updates="None" val="mouse_6" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <PolygonComponent name="mouse_visibility_fix_3">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="180" valType="int"/>
        <Param name="name" updates="None" val="mouse_visibility_fix_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every frame" val="(mouse_6.getPos()[0], mouse_6.getPos()[1])" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="constant" val="(0.025, 0.025)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <SliderComponent name="slider17">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider17" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider18">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider18" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider19">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider19" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider20">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider20" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider21">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider21" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider22">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider22" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider23">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider23" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <SliderComponent name="slider24">
        <Param name="color" updates="constant" val="White" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="granularity" updates="constant" val="1" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;Not at all&quot;, &quot;A little&quot;, &quot;Moderately&quot;, &quot;Quite a bit&quot;, &quot;Extremely&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider24" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="['rating', 'whiteOnBlack']" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
      <TextComponent name="text_11">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_11" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.82)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Rating Scales: Page 3 of 3&amp;#10;&amp;#10;Describe how you feel right now&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="muddled">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="muddled" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Muddled" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="nervous">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="nervous" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Nervous" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="angry">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="angry" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Angry" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="active">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="active" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Active" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="tired">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="tired" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Tired" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="badtempered">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="badtempered" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Bad tempered" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="alert">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="alert" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Alert" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="uncertain">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="uncertain" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Uncertain" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="createLoopTimer">
      <CodeComponent name="create_timer_1_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="loopTimer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="loopTimer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="create_timer_1_code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instrAXCPTbreak6">
      <CodeComponent name="instrAXCPT_timer_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrAXCPTbreak6Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrAXCPTbreak6Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break6.duration&quot;, instrAXCPTbreak6Timer.getTime());&amp;#10;instrAXCPTbreak6Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break6.duration', instrAXCPTbreak6Timer.getTime())&amp;#10;instrAXCPTbreak6Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrAXCPT_timer_2" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_6">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_6" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_7">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_7">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Next task: AX-CPT&amp;#10;&amp;#10;Press 'k' when first red letter is 'A' and second red letter is 'X'&amp;#10;&amp;#10;Press 'd' for any other combination of letters&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrAXCPTbreak12">
      <CodeComponent name="instrAXCPT_timer_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrAXCPTbreak12Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrAXCPTbreak12Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break12.duration&quot;, instrAXCPTbreak12Timer.getTime());&amp;#10;instrAXCPTbreak12Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break12.duration', instrAXCPTbreak12Timer.getTime())&amp;#10;instrAXCPTbreak12Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrAXCPT_timer_3" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_7">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_7" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_8">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_12">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_12" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Next task: AX-CPT&amp;#10;&amp;#10;Press 'k' when first red letter is 'A' and second red letter is 'X'&amp;#10;&amp;#10;Press 'd' for any other combination of letters&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrNBACKbreak5">
      <CodeComponent name="instrNBACK_timer_4">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrNBACKbreak5Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrNBACKbreak5Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break5.duration&quot;, instrNBACKbreak5Timer.getTime());&amp;#10;instrNBACKbreak5Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break5.duration', instrNBACKbreak5Timer.getTime())&amp;#10;instrNBACKbreak5Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer_4" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_8">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_8" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_9">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_13">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_13" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: N-Back&amp;#10;&amp;#10;Decide whether the letter on the screen is the same as the one 3 letters ago&amp;#10;&amp;#10;Press 'k' if it is the same&amp;#10;&amp;#10;Press 'd' if it is not the same&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrNBACKbreak9">
      <CodeComponent name="instrNBACK_timer_5">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrNBACKbreak9Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrNBACKbreak9Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break9.duration&quot;, instrNBACKbreak9Timer.getTime());&amp;#10;instrNBACKbreak9Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break9.duration', instrNBACKbreak9Timer.getTime())&amp;#10;instrNBACKbreak9Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer_5" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_9">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_9" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_10">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_10" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_14">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_14" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: N-Back&amp;#10;&amp;#10;Decide whether the letter on the screen is the same as the one 3 letters ago&amp;#10;&amp;#10;Press 'k' if it is the same&amp;#10;&amp;#10;Press 'd' if it is not the same&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrMENTROTbreak8">
      <CodeComponent name="instrNBACK_timer_8">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrMENTROTbreak8Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrMENTROTbreak8Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break8.duration&quot;, instrMENTROTbreak8Timer.getTime());&amp;#10;instrMENTROTbreak8Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break8.duration', instrMENTROTbreak8Timer.getTime())&amp;#10;instrMENTROTbreak8Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer_8" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_10">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_10" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_13">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_13" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_17">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_17" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: Mental Rotation&amp;#10;&amp;#10;Decide if the two shapes are the same&amp;#10;&amp;#10;Press 'k' they are the same&amp;#10;&amp;#10;Press 'd' if they are not the same&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrMENTROTbreak11">
      <CodeComponent name="instrNBACK_timer_9">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrMENTROTbreak11Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrMENTROTbreak11Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break11.duration&quot;, instrMENTROTbreak11Timer.getTime());&amp;#10;instrMENTROTbreak11Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break11.duration', instrMENTROTbreak11Timer.getTime())&amp;#10;instrMENTROTbreak11Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer_9" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_11">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_11" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_14">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_14" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_18">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_18" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: Mental Rotation&amp;#10;&amp;#10;Decide if the two shapes are the same&amp;#10;&amp;#10;Press 'k' they are the same&amp;#10;&amp;#10;Press 'd' if they are not the same&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrBRUMSpost">
      <CodeComponent name="instrBRUMStimer_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrBRUMStimer_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_19">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_19" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Thank you for completing the tasks&amp;#10;&amp;#10;On the next few screens there are lists of words that describe feelings people have&amp;#10;&amp;#10;Please read each one carefully. Then click the answer which best describes how you feel right now&amp;#10;&amp;#10;Make sure you answer every question&amp;#10;&amp;#10;Please press the mouse to begin&amp;#10;&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <MouseComponent name="mouse_9">
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="any click" valType="str"/>
        <Param name="name" updates="None" val="mouse_9" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <TextComponent name="BRUMSheader_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="BRUMSheader_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Rating Scale Instructions" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrBRUMSpre">
      <CodeComponent name="instrBRUMStimer">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrBRUMStimer" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_8">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="On the next few screens there are lists of words that describe feelings people have&amp;#10;&amp;#10;Please read each one carefully. Then click the answer which best describes how you feel right now&amp;#10;&amp;#10;Make sure you answer every question&amp;#10;&amp;#10;Please press the mouse to begin&amp;#10;&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <MouseComponent name="mouse_4">
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="any click" valType="str"/>
        <Param name="name" updates="None" val="mouse_4" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <TextComponent name="BRUMSheader">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="BRUMSheader" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Rating Scale Instructions" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="end">
      <CodeComponent name="elapsed_time_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="elapsed_time_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_20">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_20" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="End of Experiment&amp;#10;&amp;#10;Thank you for taking part&amp;#10;&amp;#10;Please email Ellie with your participant ID&amp;#10;&amp;#10;You will then receive instructions about how to claim the compensation for your time&amp;#10;&amp;#10;Press the space bar to close the experiment" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_12">
        <Param name="allowedKeys" updates="constant" val="['space']" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_12" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instrMENTROTbreak4">
      <CodeComponent name="instrNBACK_timer_10">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrMENTROTbreak4Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrMENTROTbreak4Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break4.duration&quot;, instrMENTROTbreak4Timer.getTime());&amp;#10;instrMENTROTbreak4Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break4.duration', instrMENTROTbreak4Timer.getTime())&amp;#10;instrMENTROTbreak4Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer_10" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_13">
        <Param name="allowedKeys" updates="constant" val="[&quot;k&quot;]" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_13" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_15">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_15" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_21">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_21" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: Mental Rotation&amp;#10;&amp;#10;Decide if the two shapes are the same&amp;#10;&amp;#10;Press 'k' they are the same&amp;#10;&amp;#10;Press 'd' if they are not the same&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' when ready to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instrSEARCHbreak3">
      <CodeComponent name="instrNBACK_timer_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrSEARCHbreak3Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrSEARCHbreak3Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break3.duration&quot;, instrSEARCHbreak3Timer.getTime());&amp;#10;instrSEARCHbreak3Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break3.duration', instrSEARCHbreak3Timer.getTime())&amp;#10;instrSEARCHbreak3Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="instrHeaderText_5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: Visual Search&amp;#10;&amp;#10;Press 'k' if you can see the letter T&amp;#10;Press 'd' if you can not see the letter T&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4">
        <Param name="allowedKeys" updates="constant" val="['k']" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_4" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instrSEARCHbreak7">
      <CodeComponent name="instrNBACK_timer_6">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrSEARCHbreak7Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrSEARCHbreak7Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break7.duration&quot;, instrSEARCHbreak7Timer.getTime());&amp;#10;instrSEARCHbreak7Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break7.duration', instrSEARCHbreak7Timer.getTime())&amp;#10;instrSEARCHbreak7Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer_6" valType="code"/>
      </CodeComponent>
      <TextComponent name="instrHeaderText_11">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_11" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_15">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_15" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: Visual Search&amp;#10;&amp;#10;Press 'k' if you can see the letter T&amp;#10;Press 'd' if you can not see the letter T&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_15">
        <Param name="allowedKeys" updates="constant" val="['k']" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_15" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instrSEARCHbreak10">
      <CodeComponent name="instrNBACK_timer_7">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instrSEARCHbreak10Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="instrSEARCHbreak10Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break10.duration&quot;, instrSEARCHbreak10Timer.getTime());&amp;#10;instrSEARCHbreak10Timer = [];&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break10.duration', instrSEARCHbreak10Timer.getTime())&amp;#10;instrSEARCHbreak10Timer = []" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instrNBACK_timer_7" valType="code"/>
      </CodeComponent>
      <TextComponent name="instrHeaderText_12">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instrHeaderText_12" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Optional rest break" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_16">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text_16" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="Next task: Visual Search&amp;#10;&amp;#10;Press 'k' if you can see the letter T&amp;#10;Press 'd' if you can not see the letter T&amp;#10;&amp;#10;Respond as quickly and accurately as possible&amp;#10;&amp;#10;Press 'k' to begin" valType="str"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5">
        <Param name="allowedKeys" updates="constant" val="['k']" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="searchTrial">
      <CodeComponent name="defineFunctionsSearch">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="shuffle = util.shuffle&amp;#10;&amp;#10;function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="defineFunctionsSearch" valType="code"/>
      </CodeComponent>
      <CodeComponent name="searchCode">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="orientList = [0, 90, 180, 270]&amp;#10;PosList = [[.45, -.45], [.45, -.15], [.45, .15], [.45, .45], [.15, -.45], [.15, -.15], [.15, .15], [.15, .45], [-.15, -.45], [-.15, -.15], [-.15, .15], [-.15, .45], [-.45, -.45], [-.45, -.15], [-.45, .15], [-.45, .45]]" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="orientList = [0, 90, 180, 270];&amp;#10;PosList = [[0.45, (- 0.45)], [0.45, (- 0.15)], [0.45, 0.15], [0.45, 0.45], [0.15, (- 0.45)], [0.15, (- 0.15)], [0.15, 0.15], [0.15, 0.45], [(- 0.15), (- 0.45)], [(- 0.15), (- 0.15)], [(- 0.15), 0.15], [(- 0.15), 0.45], [(- 0.45), (- 0.45)], [(- 0.45), (- 0.15)], [(- 0.45), 0.15], [(- 0.45), 0.45]];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="shuffle(PosList);&amp;#10;targetOrient = choice(orientList);&amp;#10;stim2Orient = choice(orientList);&amp;#10;stim3Orient = choice(orientList);&amp;#10;stim4Orient = choice(orientList);&amp;#10;stim5Orient = choice(orientList);&amp;#10;stim6Orient = choice(orientList);&amp;#10;stim7Orient = choice(orientList);&amp;#10;stim8Orient = choice(orientList);&amp;#10;stim9Orient = choice(orientList);&amp;#10;stim10Orient = choice(orientList);&amp;#10;stim11Orient = choice(orientList);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="shuffle(PosList)&amp;#10;&amp;#10;targetOrient = choice(orientList)&amp;#10;stim2Orient = choice (orientList)&amp;#10;stim3Orient = choice(orientList)&amp;#10;stim4Orient = choice(orientList)&amp;#10;stim5Orient = choice(orientList)&amp;#10;stim6Orient = choice(orientList)&amp;#10;stim7Orient = choice(orientList)&amp;#10;stim8Orient = choice(orientList)&amp;#10;stim9Orient = choice(orientList)&amp;#10;stim10Orient = choice(orientList)&amp;#10;stim11Orient = choice(orientList)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="searchCode" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_14">
        <Param name="allowedKeys" updates="constant" val="'k', 'd'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corrResponse" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_14" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="targetStim">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="targetStim" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="targetOrient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[1]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$targetLetter" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim2Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[2]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim3Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[3]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim4Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[4]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim5Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[5]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim6">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim6Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[6]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim7">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim7Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[7]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim8">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim8Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[8]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim9">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim9Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[9]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim10">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim10" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim10Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[10]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="searchStim11">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchStim11" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="stim11Orient" valType="code"/>
        <Param name="pos" updates="set every repeat" val="PosList[11]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="L" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="searchFeedback">
      <CodeComponent name="searchFeedback_code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg = ' '" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="msg = &quot; &quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if (key_resp_14.corr) {&amp;#10;    msg = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if key_resp_14.corr:&amp;#10;    msg = &quot;Correct&quot;&amp;#10;else:&amp;#10;    msg = &quot;Incorrect&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="searchFeedback_code_3" valType="code"/>
      </CodeComponent>
      <TextComponent name="searchFeedbackText">
        <Param name="color" updates="constant" val="$[1.000,1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.15" valType="code"/>
        <Param name="name" updates="None" val="searchFeedbackText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="F_ISA">
      <MouseComponent name="mouse_22">
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="never" valType="str"/>
        <Param name="name" updates="None" val="mouse_22" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <PolygonComponent name="mouse_visibility">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="180" valType="int"/>
        <Param name="name" updates="None" val="mouse_visibility" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every frame" val="(mouse_22.getPos()[0], mouse_22.getPos()[1])" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="regular polygon..." valType="str"/>
        <Param name="size" updates="constant" val="(0.025, 0.025)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="Timer = util.Clock()" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="Timer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if slider.getRating() &gt; 0:&amp;#10;    continueRoutine = false" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((slider.getRating() &gt; 0)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;F_ISA.duration&quot;, Timer.getTime());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('F_ISA.duration', Timer.getTime())" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Please rate your level of mental fatigue  from 1-5:" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SliderComponent name="slider">
        <Param name="color" updates="constant" val="LightGray" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="granularity" updates="constant" val="0" valType="code"/>
        <Param name="labels" updates="constant" val="(&quot;very low (alert)&quot;, &quot;low&quot;, &quot;medium&quot;, &quot;very high (fatigued)&quot;)" valType="list"/>
        <Param name="name" updates="None" val="slider" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.1, 0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.75, 0.1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="styles" updates="constant" val="('rating', 'whiteOnBlack')" valType="fixedList"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="ticks" updates="constant" val="(1, 2, 3, 4, 5)" valType="list"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </SliderComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="intro"/>
    <Routine name="F_ISA"/>
    <Routine name="instrBRUMSpre"/>
    <Routine name="BRUMS_1"/>
    <Routine name="BRUMS_2"/>
    <Routine name="BRUMS_3"/>
    <Routine name="instrAXCPTbreak1"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="AXCPTtrialsLoop1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trialNumber', 1), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 2), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 3), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 4), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 5), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 6), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 7), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 8), ('trial', 'BX'), ('cueType', 'B'), ('probeType', 'X'), ('trialType', 'probeWrong'), ('corrResponse', 'd')]), OrderedDict([('trialNumber', 9), ('trial', 'AY'), ('cueType', 'A'), ('probeType', 'Y'), ('trialType', 'cueWrong'), ('corrResponse', 'd')]), OrderedDict([('trialNumber', 10), ('trial', 'BY'), ('cueType', 'B'), ('probeType', 'Y'), ('trialType', 'bothWrong'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trialType.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="AXCPTtrialsLoop1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="AXCPTtrial"/>
    <Routine name="AXCPTprobe"/>
    <Routine name="AXCPTfeedback"/>
    <LoopTerminator name="AXCPTtrialsLoop1"/>
    <Routine name="instrNBACKbreak2"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="NBackTargetLoop1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="code"/>
      <Param name="name" updates="None" val="NBackTargetLoop1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="NBackFirst3Trials"/>
    <LoopTerminator name="NBackTargetLoop1"/>
    <LoopInitiator loopType="TrialHandler" name="NBackTrialsLoop1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trial', 1), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 2), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 3), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 4), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 5), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 6), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 7), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 8), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 9), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 10), ('trialType', 'nonTarget'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="2-back_loop.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="NBackTrialsLoop1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="NBackRemainderTrials"/>
    <Routine name="NBackFeedback"/>
    <LoopTerminator name="NBackTrialsLoop1"/>
    <Routine name="instrSEARCHbreak3"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="searchLoop1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('cond', 'target'), ('targetLetter', 'T'), ('corrResponse', 'k')]), OrderedDict([('cond', 'nonTarget'), ('targetLetter', 'L'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="visualSearchConds.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="searchLoop1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="searchTrial"/>
    <Routine name="searchFeedback"/>
    <LoopTerminator name="searchLoop1"/>
    <Routine name="instrMENTROTbreak4"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="mentRotTrialsLoop1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('imagefile', '10_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="response.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="mentRotTrialsLoop1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="mentRotTrial"/>
    <Routine name="mentRotFeedback"/>
    <LoopTerminator name="mentRotTrialsLoop1"/>
    <Routine name="instrNBACKbreak5"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="NBackTargetLOOP2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="code"/>
      <Param name="name" updates="None" val="NBackTargetLOOP2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="NBackFirst3Trials"/>
    <LoopTerminator name="NBackTargetLOOP2"/>
    <LoopInitiator loopType="TrialHandler" name="NBackTrialsLoop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trial', 1), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 2), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 3), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 4), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 5), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 6), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 7), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 8), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 9), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 10), ('trialType', 'nonTarget'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="2-back_loop.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="NBackTrialsLoop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="NBackRemainderTrials"/>
    <Routine name="NBackFeedback"/>
    <LoopTerminator name="NBackTrialsLoop2"/>
    <Routine name="instrAXCPTbreak6"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="AXCPTtrialsLoop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trialNumber', 1), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 2), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 3), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 4), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 5), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 6), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 7), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 8), ('trial', 'BX'), ('cueType', 'B'), ('probeType', 'X'), ('trialType', 'probeWrong'), ('corrResponse', 'd')]), OrderedDict([('trialNumber', 9), ('trial', 'AY'), ('cueType', 'A'), ('probeType', 'Y'), ('trialType', 'cueWrong'), ('corrResponse', 'd')]), OrderedDict([('trialNumber', 10), ('trial', 'BY'), ('cueType', 'B'), ('probeType', 'Y'), ('trialType', 'bothWrong'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trialType.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="AXCPTtrialsLoop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="AXCPTtrial"/>
    <Routine name="AXCPTprobe"/>
    <Routine name="AXCPTfeedback"/>
    <LoopTerminator name="AXCPTtrialsLoop2"/>
    <Routine name="instrSEARCHbreak7"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="searchLoop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('cond', 'target'), ('targetLetter', 'T'), ('corrResponse', 'k')]), OrderedDict([('cond', 'nonTarget'), ('targetLetter', 'L'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="visualSearchConds.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="searchLoop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="searchTrial"/>
    <Routine name="searchFeedback"/>
    <LoopTerminator name="searchLoop2"/>
    <Routine name="instrMENTROTbreak8"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="mentRotTrialsLoop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('imagefile', '10_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="response.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="mentRotTrialsLoop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="mentRotTrial"/>
    <Routine name="mentRotFeedback"/>
    <Routine name="timer"/>
    <LoopTerminator name="mentRotTrialsLoop2"/>
    <Routine name="instrNBACKbreak9"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="NBackTargetLoop3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="code"/>
      <Param name="name" updates="None" val="NBackTargetLoop3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="NBackFirst3Trials"/>
    <LoopTerminator name="NBackTargetLoop3"/>
    <LoopInitiator loopType="TrialHandler" name="NBackTrialsLoop3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trial', 1), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 2), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 3), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 4), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 5), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 6), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 7), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 8), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 9), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 10), ('trialType', 'nonTarget'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="2-back_loop.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="NBackTrialsLoop3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="NBackRemainderTrials"/>
    <Routine name="NBackFeedback"/>
    <LoopTerminator name="NBackTrialsLoop3"/>
    <Routine name="instrSEARCHbreak10"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="searchLoop3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('cond', 'target'), ('targetLetter', 'T'), ('corrResponse', 'k')]), OrderedDict([('cond', 'nonTarget'), ('targetLetter', 'L'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="visualSearchConds.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="searchLoop3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="searchTrial"/>
    <Routine name="searchFeedback"/>
    <LoopTerminator name="searchLoop3"/>
    <Routine name="instrMENTROTbreak11"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="mentRotTrialsLoop3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('imagefile', '10_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="response.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="mentRotTrialsLoop3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="mentRotTrial"/>
    <Routine name="mentRotFeedback"/>
    <Routine name="timer"/>
    <LoopTerminator name="mentRotTrialsLoop3"/>
    <Routine name="instrAXCPTbreak12"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="AXCPTtrialsLoop3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trialNumber', 1), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 2), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 3), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 4), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 5), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 6), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 7), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 8), ('trial', 'BX'), ('cueType', 'B'), ('probeType', 'X'), ('trialType', 'probeWrong'), ('corrResponse', 'd')]), OrderedDict([('trialNumber', 9), ('trial', 'AY'), ('cueType', 'A'), ('probeType', 'Y'), ('trialType', 'cueWrong'), ('corrResponse', 'd')]), OrderedDict([('trialNumber', 10), ('trial', 'BY'), ('cueType', 'B'), ('probeType', 'Y'), ('trialType', 'bothWrong'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trialType.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="AXCPTtrialsLoop3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="AXCPTtrial"/>
    <Routine name="AXCPTprobe"/>
    <Routine name="AXCPTfeedback"/>
    <LoopTerminator name="AXCPTtrialsLoop3"/>
    <Routine name="instrBRUMSpost"/>
    <Routine name="BRUMS_1"/>
    <Routine name="BRUMS_2"/>
    <Routine name="BRUMS_3"/>
    <Routine name="end"/>
  </Flow>
</PsychoPy2experiment>
